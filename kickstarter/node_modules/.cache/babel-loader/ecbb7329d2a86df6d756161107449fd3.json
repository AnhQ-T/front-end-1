{"ast":null,"code":"var _jsxFileName = \"D:\\\\continiuum\\\\lambdaschool\\\\build-week\\\\front-end\\\\kickstarter\\\\src\\\\components\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { Login } from '../actions/action';\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\n\nconst LoginForm = props => {\n  let history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n  const [loginError, setLoginError] = useState('');\n  const [credentials, setCredentials] = useState({\n    username: props.username,\n    password: props.password\n  });\n\n  const changeHandler = e => {\n    e.preventDefault();\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  /*\r\n      TEST AUTHENTICATION LOGIN\r\n          \"email\": \"eve.holt@reqres.in\",\r\n          \"password\": \"cityslicka\"\r\n  */\n\n\n  const submitHandler = e => {\n    e.preventDefault();\n    props.Login(credentials);\n\n    if (localStorage.getItem(\"token\") != null) {\n      history.push(\"/profile\");\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, loginError.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"login-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 38\n    }\n  }, loginError) : null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    value: credentials.username,\n    onChange: changeHandler,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 41\n    }\n  }, \"Username is required\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: credentials.password,\n    onChange: changeHandler,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 41\n    }\n  }, \"Password is required\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Login\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username,\n    password: state.password\n  };\n};\n\nexport default connect(mapStateToProps, {\n  Login\n})(LoginForm);","map":{"version":3,"sources":["D:/continiuum/lambdaschool/build-week/front-end/kickstarter/src/components/Login.js"],"names":["React","useState","connect","Login","useHistory","useForm","LoginForm","props","history","register","handleSubmit","errors","reset","loginError","setLoginError","credentials","setCredentials","username","password","changeHandler","e","preventDefault","target","name","value","submitHandler","localStorage","getItem","push","length","required","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport {Login} from '../actions/action'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useForm} from 'react-hook-form';\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const {register, handleSubmit, errors, reset} = useForm();\r\n\r\n    const [loginError, setLoginError] = useState('');\r\n\r\n    const [credentials, setCredentials] = useState({\r\n        username: props.username,\r\n        password: props.password\r\n    })\r\n\r\n    const changeHandler = (e) => {\r\n        e.preventDefault();\r\n        setCredentials({\r\n            ...credentials,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    /*\r\n        TEST AUTHENTICATION LOGIN\r\n            \"email\": \"eve.holt@reqres.in\",\r\n            \"password\": \"cityslicka\"\r\n    */\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.Login(credentials)\r\n        if (localStorage.getItem(\"token\") != null) {\r\n            history.push(\"/profile\")\r\n        }\r\n        else {\r\n            history.push(\"/\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submitHandler}>\r\n            {loginError.length > 0 ? <p className=\"login-error\">{loginError}</p> : null}\r\n                <h3>Username</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    value={credentials.username}\r\n                    onChange={changeHandler}\r\n                    ref={register({ required: true })}\r\n                />\r\n                    {errors.username && <p>Username is required</p>}\r\n                <h3>Password</h3>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={credentials.password}\r\n                    onChange={changeHandler}\r\n                    ref={register({ required: true })}\r\n                />\r\n                    {errors.password && <p>Password is required</p>}\r\n                <div>\r\n                    <button type=\"submit\">Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        username: state.username,\r\n        password: state.password\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {Login}) (LoginForm)\r\n"]},"metadata":{},"sourceType":"module"}