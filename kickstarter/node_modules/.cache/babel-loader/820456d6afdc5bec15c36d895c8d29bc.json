{"ast":null,"code":"var _jsxFileName = \"D:\\\\continiuum\\\\lambdaschool\\\\build-week\\\\front-end\\\\kickstarter\\\\src\\\\components\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { Login } from '../actions/action';\nimport { useForm } from 'react-hook-form';\n\nconst LoginForm = props => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n  const [credentials, setCredentials] = useState({\n    username: props.username,\n    password: props.password\n  });\n\n  const changeHandler = e => {\n    e.preventDefault();\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  /*\r\n      TEST AUTHENTICATION LOGIN\r\n          \"email\": \"eve.holt@reqres.in\",\r\n          \"password\": \"cityslicka\"\r\n  */\n\n\n  const submitHandler = e => {\n    e.preventDefault();\n    props.Login(credentials);\n  };\n\n  if (localStorage.getItem(\"token\") != null) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      name: \"username\",\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }\n    }, \"Username is required\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }\n    }, \"Password is required\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Login\"))));\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username,\n    password: state.password\n  };\n};\n\nexport default connect(mapStateToProps, {\n  Login\n})(LoginForm);","map":{"version":3,"sources":["D:/continiuum/lambdaschool/build-week/front-end/kickstarter/src/components/Login.js"],"names":["React","useState","connect","Login","useForm","LoginForm","props","register","handleSubmit","errors","reset","credentials","setCredentials","username","password","changeHandler","e","preventDefault","target","name","value","submitHandler","localStorage","getItem","required","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,MAAzB;AAAiCC,IAAAA;AAAjC,MAA0CN,OAAO,EAAvD;AAEA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC;AAC3CY,IAAAA,QAAQ,EAAEP,KAAK,CAACO,QAD2B;AAE3CC,IAAAA,QAAQ,EAAER,KAAK,CAACQ;AAF2B,GAAD,CAA9C;;AAKA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,cAAc,CAAC,EACX,GAAGD,WADQ;AAEX,OAACK,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAFf,KAAD,CAAd;AAIH,GAND;AAQA;;;;;;;AAMA,QAAMC,aAAa,GAAIL,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,KAAK,CAACH,KAAN,CAAYQ,WAAZ;AAEH,GAJD;;AAMA,MAAIW,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAArC,EAA2C;AACvC,wBAAQ,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH,GAFD,MAGK;AACD,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,UAFhB;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,GAAG,EAAEhB,QAAQ,CAAC;AAAEiB,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQSf,MAAM,CAACI,QAAP,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAR5B,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,WAAW,EAAC,UAFhB;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,GAAG,EAAEN,QAAQ,CAAC;AAAEiB,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAgBSf,MAAM,CAACK,QAAP,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAhB5B,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAjBJ,CADJ,CADA;AAyBH;AACJ,CA3DD;;AA6DA,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHb,IAAAA,QAAQ,EAAEa,KAAK,CAACb,QADb;AAEHC,IAAAA,QAAQ,EAAEY,KAAK,CAACZ;AAFb,GAAP;AAIH,CALD;;AAOA,eAAeZ,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA;AAAD,CAAlB,CAAP,CAAmCE,SAAnC,CAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport {Login} from '../actions/action'\r\nimport {useForm} from 'react-hook-form';\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const {register, handleSubmit, errors, reset} = useForm();\r\n\r\n    const [credentials, setCredentials] = useState({\r\n        username: props.username,\r\n        password: props.password\r\n    })\r\n\r\n    const changeHandler = (e) => {\r\n        e.preventDefault();\r\n        setCredentials({\r\n            ...credentials,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    /*\r\n        TEST AUTHENTICATION LOGIN\r\n            \"email\": \"eve.holt@reqres.in\",\r\n            \"password\": \"cityslicka\"\r\n    */\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.Login(credentials)\r\n\r\n    }\r\n\r\n    if (localStorage.getItem(\"token\") != null) {\r\n        return (<Redirect to=\"profile\" />);\r\n    }\r\n    else {\r\n        return (\r\n        <div>\r\n            <form >\r\n                <h3>Username</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    ref={register({ required: true })}\r\n                />\r\n                    {errors.username && <p>Username is required</p>}\r\n                <h3>Password</h3>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    ref={register({ required: true })}\r\n                />\r\n                    {errors.password && <p>Password is required</p>}\r\n                <div>\r\n                    <button type=\"submit\">Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        username: state.username,\r\n        password: state.password\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {Login}) (LoginForm)\r\n"]},"metadata":{},"sourceType":"module"}