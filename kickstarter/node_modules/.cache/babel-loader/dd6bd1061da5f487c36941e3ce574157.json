{"ast":null,"code":"var _jsxFileName = \"D:\\\\continiuum\\\\lambdaschool\\\\build-week\\\\front-end\\\\kickstarter\\\\src\\\\components\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { Login } from '../actions/action';\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\n\nconst LoginForm = props => {\n  let history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n  const [credentials, setCredentials] = useState({\n    username: props.username,\n    password: props.password\n  });\n\n  const changeHandler = e => {\n    e.preventDefault();\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  /*\r\n      TEST AUTHENTICATION LOGIN\r\n          \"email\": \"eve.holt@reqres.in\",\r\n          \"password\": \"cityslicka\"\r\n  */\n\n\n  const submitHandler = e => {\n    e.preventDefault();\n    props.Login(credentials);\n\n    if (localStorage.getItem(\"token\") != null) {\n      history.push(\"/profile\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }, \"Username is required\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 41\n    }\n  }, \"Password is required\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Login\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username,\n    password: state.password\n  };\n};\n\nexport default connect(mapStateToProps, {\n  Login\n})(LoginForm);","map":{"version":3,"sources":["D:/continiuum/lambdaschool/build-week/front-end/kickstarter/src/components/Login.js"],"names":["React","useState","connect","Login","useHistory","useForm","LoginForm","props","history","register","handleSubmit","errors","reset","credentials","setCredentials","username","password","changeHandler","e","preventDefault","target","name","value","submitHandler","localStorage","getItem","push","required","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,MAAIC,OAAO,GAAGJ,UAAU,EAAxB;AAEA,QAAM;AAACK,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,MAAzB;AAAiCC,IAAAA;AAAjC,MAA0CP,OAAO,EAAvD;AAEA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC;AAC3Cc,IAAAA,QAAQ,EAAER,KAAK,CAACQ,QAD2B;AAE3CC,IAAAA,QAAQ,EAAET,KAAK,CAACS;AAF2B,GAAD,CAA9C;;AAKA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,cAAc,CAAC,EACX,GAAGD,WADQ;AAEX,OAACK,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAFf,KAAD,CAAd;AAIH,GAND;AAQA;;;;;;;AAMA,QAAMC,aAAa,GAAIL,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAZ,IAAAA,KAAK,CAACJ,KAAN,CAAYU,WAAZ;;AACA,QAAIW,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAArC,EAA2C;AACvCjB,MAAAA,OAAO,CAACkB,IAAR,CAAa,UAAb;AACH;AACJ,GAND;;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,UAFhB;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,GAAG,EAAEjB,QAAQ,CAAC;AAAEkB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQShB,MAAM,CAACI,QAAP,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAR5B,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,WAAW,EAAC,UAFhB;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,GAAG,EAAEN,QAAQ,CAAC;AAAEkB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAgBShB,MAAM,CAACK,QAAP,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAhB5B,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAjBJ,CADJ,CADJ;AAyBH,CA1DD;;AA4DA,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHd,IAAAA,QAAQ,EAAEc,KAAK,CAACd,QADb;AAEHC,IAAAA,QAAQ,EAAEa,KAAK,CAACb;AAFb,GAAP;AAIH,CALD;;AAOA,eAAed,OAAO,CAAC0B,eAAD,EAAkB;AAACzB,EAAAA;AAAD,CAAlB,CAAP,CAAmCG,SAAnC,CAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport {Login} from '../actions/action'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useForm} from 'react-hook-form';\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const {register, handleSubmit, errors, reset} = useForm();\r\n\r\n    const [credentials, setCredentials] = useState({\r\n        username: props.username,\r\n        password: props.password\r\n    })\r\n\r\n    const changeHandler = (e) => {\r\n        e.preventDefault();\r\n        setCredentials({\r\n            ...credentials,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    /*\r\n        TEST AUTHENTICATION LOGIN\r\n            \"email\": \"eve.holt@reqres.in\",\r\n            \"password\": \"cityslicka\"\r\n    */\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.Login(credentials)\r\n        if (localStorage.getItem(\"token\") != null) {\r\n            history.push(\"/profile\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form >\r\n                <h3>Username</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    ref={register({ required: true })}\r\n                />\r\n                    {errors.username && <p>Username is required</p>}\r\n                <h3>Password</h3>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    ref={register({ required: true })}\r\n                />\r\n                    {errors.password && <p>Password is required</p>}\r\n                <div>\r\n                    <button type=\"submit\">Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        username: state.username,\r\n        password: state.password\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {Login}) (LoginForm)\r\n"]},"metadata":{},"sourceType":"module"}